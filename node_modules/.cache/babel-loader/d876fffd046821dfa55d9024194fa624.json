{"ast":null,"code":"var _jsxFileName = \"/Users/asadali/PhpstormProjects/React/meme-generator/src/components/Meme.js\",\n    _s = $RefreshSig$();\n\nimport memesData from \"../memesData\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Meme() {\n  _s();\n\n  const [meme, setMeme] = React.useState({\n    topText: '',\n    bottomText: '',\n    randomImage: 'http://i.imgflip.com/1bij.jpg'\n  });\n  const [allMemeImage, setAllMemeImages] = React.useState(memesData); //console.log(allMemeImage) // object\n\n  React.useEffect(() => {\n    fetch(\"https://api.imgflip.com/get_memes\").then(res => res.json()).then(data => console.log(data));\n  });\n\n  function getMemeImage() {\n    const memesArray = allMemeImage.data.memes; // array\n\n    const randomNumber = Math.floor(Math.random() * memesArray.length); //    console.log(randomNumber)  // random array number\n\n    const url = memesArray[randomNumber].url; // console.log(url)  // image properties\n\n    setMeme(prestate => ({ ...prestate,\n      randomImage: url\n    }));\n  }\n\n  function handleChange(event) {\n    const {\n      name,\n      value\n    } = event.target;\n    setMeme(prevMeme => ({ ...prevMeme,\n      [name]: value\n    }));\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Top text\",\n        className: \"form--input\",\n        name: \"topText\",\n        value: meme.topText,\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Bottom text\",\n        className: \"form--input\",\n        name: \"bottomText\",\n        value: meme.bottomText,\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"form--button\",\n        onClick: getMemeImage,\n        children: \"Get a new meme image \\uD83D\\uDDBC\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"meme\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: meme.randomImage,\n        className: \"meme--image\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"meme--text top\",\n        children: meme.topText\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"meme--text bottom\",\n        children: meme.bottomText\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Meme, \"8kGU4koxkCtRe+UWZBmMwVJs7ME=\");\n\n_c = Meme;\n\nvar _c;\n\n$RefreshReg$(_c, \"Meme\");","map":{"version":3,"names":["memesData","React","Meme","meme","setMeme","useState","topText","bottomText","randomImage","allMemeImage","setAllMemeImages","useEffect","fetch","then","res","json","data","console","log","getMemeImage","memesArray","memes","randomNumber","Math","floor","random","length","url","prestate","handleChange","event","name","value","target","prevMeme"],"sources":["/Users/asadali/PhpstormProjects/React/meme-generator/src/components/Meme.js"],"sourcesContent":["import memesData from \"../memesData\";\nimport React from 'react';\n\n\nexport default function Meme() {\n\n\n    const [meme,setMeme] = React.useState({\n        topText: '',\n        bottomText: '',\n        randomImage: 'http://i.imgflip.com/1bij.jpg'\n    })\n\n    const [allMemeImage,setAllMemeImages] = React.useState(memesData)\n   //console.log(allMemeImage) // object\n\n React.useEffect(() => {\n     fetch(\"https://api.imgflip.com/get_memes\")\n         .then(res => res.json())\n         .then(data => console.log(data))\n })\n\n\n\n    function getMemeImage()  {\n\n       const memesArray = allMemeImage.data.memes // array\n\n        const randomNumber =  Math.floor(Math.random() * memesArray.length)\n\n    //    console.log(randomNumber)  // random array number\n\n        const url = memesArray[randomNumber].url\n\n       // console.log(url)  // image properties\n\n        setMeme(prestate =>({\n            ...prestate,\n               randomImage : url\n        }))\n\n\n    }\n    function handleChange(event) {\n       const {name,value} = event.target\n        setMeme(prevMeme => ({\n            ...prevMeme,\n            [name] :  value\n        }))\n    }\n    return (\n        <main >\n            <div className=\"form\">\n                <input\n                    type=\"text\"\n                    placeholder=\"Top text\"\n                    className=\"form--input\"\n                    name= \"topText\"\n                    value={meme.topText}\n                    onChange={handleChange}\n                />\n                <input\n                    type=\"text\"\n                    placeholder=\"Bottom text\"\n                    className=\"form--input\"\n                    name=\"bottomText\"\n                    value={meme.bottomText}\n                    onChange={handleChange}\n\n                />\n                <button\n                    className=\"form--button\"\n                    onClick={getMemeImage}\n                >\n                    Get a new meme image ðŸ–¼\n                </button>\n            </div>\n            <div className=\"meme\">\n                <img src={meme.randomImage} className=\"meme--image\" />\n                <h2 className=\"meme--text top\">{meme.topText}</h2>\n                <h2 className=\"meme--text bottom\">{meme.bottomText}</h2>\n            </div>\n        </main>\n)\n\n}"],"mappings":";;;AAAA,OAAOA,SAAP,MAAsB,cAAtB;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAGA,eAAe,SAASC,IAAT,GAAgB;EAAA;;EAG3B,MAAM,CAACC,IAAD,EAAMC,OAAN,IAAiBH,KAAK,CAACI,QAAN,CAAe;IAClCC,OAAO,EAAE,EADyB;IAElCC,UAAU,EAAE,EAFsB;IAGlCC,WAAW,EAAE;EAHqB,CAAf,CAAvB;EAMA,MAAM,CAACC,YAAD,EAAcC,gBAAd,IAAkCT,KAAK,CAACI,QAAN,CAAeL,SAAf,CAAxC,CAT2B,CAU5B;;EAEFC,KAAK,CAACU,SAAN,CAAgB,MAAM;IAClBC,KAAK,CAAC,mCAAD,CAAL,CACKC,IADL,CACUC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADjB,EAEKF,IAFL,CAEUG,IAAI,IAAIC,OAAO,CAACC,GAAR,CAAYF,IAAZ,CAFlB;EAGH,CAJD;;EAQG,SAASG,YAAT,GAAyB;IAEtB,MAAMC,UAAU,GAAGX,YAAY,CAACO,IAAb,CAAkBK,KAArC,CAFsB,CAEqB;;IAE1C,MAAMC,YAAY,GAAIC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgBL,UAAU,CAACM,MAAtC,CAAtB,CAJqB,CAMzB;;IAEI,MAAMC,GAAG,GAAGP,UAAU,CAACE,YAAD,CAAV,CAAyBK,GAArC,CARqB,CAUtB;;IAECvB,OAAO,CAACwB,QAAQ,KAAI,EAChB,GAAGA,QADa;MAEbpB,WAAW,EAAGmB;IAFD,CAAJ,CAAT,CAAP;EAMH;;EACD,SAASE,YAAT,CAAsBC,KAAtB,EAA6B;IAC1B,MAAM;MAACC,IAAD;MAAMC;IAAN,IAAeF,KAAK,CAACG,MAA3B;IACC7B,OAAO,CAAC8B,QAAQ,KAAK,EACjB,GAAGA,QADc;MAEjB,CAACH,IAAD,GAAUC;IAFO,CAAL,CAAT,CAAP;EAIH;;EACD,oBACI;IAAA,wBACI;MAAK,SAAS,EAAC,MAAf;MAAA,wBACI;QACI,IAAI,EAAC,MADT;QAEI,WAAW,EAAC,UAFhB;QAGI,SAAS,EAAC,aAHd;QAII,IAAI,EAAE,SAJV;QAKI,KAAK,EAAE7B,IAAI,CAACG,OALhB;QAMI,QAAQ,EAAEuB;MANd;QAAA;QAAA;QAAA;MAAA,QADJ,eASI;QACI,IAAI,EAAC,MADT;QAEI,WAAW,EAAC,aAFhB;QAGI,SAAS,EAAC,aAHd;QAII,IAAI,EAAC,YAJT;QAKI,KAAK,EAAE1B,IAAI,CAACI,UALhB;QAMI,QAAQ,EAAEsB;MANd;QAAA;QAAA;QAAA;MAAA,QATJ,eAkBI;QACI,SAAS,EAAC,cADd;QAEI,OAAO,EAAEV,YAFb;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAlBJ;IAAA;MAAA;MAAA;MAAA;IAAA,QADJ,eA0BI;MAAK,SAAS,EAAC,MAAf;MAAA,wBACI;QAAK,GAAG,EAAEhB,IAAI,CAACK,WAAf;QAA4B,SAAS,EAAC;MAAtC;QAAA;QAAA;QAAA;MAAA,QADJ,eAEI;QAAI,SAAS,EAAC,gBAAd;QAAA,UAAgCL,IAAI,CAACG;MAArC;QAAA;QAAA;QAAA;MAAA,QAFJ,eAGI;QAAI,SAAS,EAAC,mBAAd;QAAA,UAAmCH,IAAI,CAACI;MAAxC;QAAA;QAAA;QAAA;MAAA,QAHJ;IAAA;MAAA;MAAA;MAAA;IAAA,QA1BJ;EAAA;IAAA;IAAA;IAAA;EAAA,QADJ;AAmCH;;GAjFuBL,I;;KAAAA,I"},"metadata":{},"sourceType":"module"}